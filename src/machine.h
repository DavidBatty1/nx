//----------------------------------------------------------------------------------------------------------------------
// Common data structure for all machines
//----------------------------------------------------------------------------------------------------------------------

#pragma once

#include "memory.h"

typedef struct  
{
    Memory      memory;
}
Machine;

// Create a ZX Spectrum 48K machine
bool machineOpen(Machine* M);

// Destroy a machine
void machineClose(Machine* M);

//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------

#ifdef NX_IMPL

#include <kore/k_blob.h>

bool machineOpen(Machine* M)
{
    if (!memoryOpen(&M->memory)) return NO;
    Blob rom = blobLoad("48.rom");
    if (rom.bytes)
    {
        memoryLoad(&M->memory, 0, rom.bytes, (u16)rom.size);
        blobUnload(rom);
    }

    return YES;
}

void machineClose(Machine* M)
{
    memoryClose(&M->memory);
}

//----------------------------------------------------------------------------------------------------------------------
//----------------------------------------------------------------------------------------------------------------------

#endif // NX_IMPL
